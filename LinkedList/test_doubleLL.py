from DoublyLinkedList import DoublyLList

if __name__ == "__main__":
    
    dll_1 = DoublyLList(1)
    dll_1.append(3)
    dll_1.append(5)    
    dll_1.append(7)
    dll_1.prepend(2)
    print(dll_1.length)
    dll_1.display()
    dll_1.insert(2,11)
    dll_1.insert(0,4)
    dll_1.insert(20,6)
    dll_1.display()
    dll_1.update(2,25)
    dll_1.display()
    dll_1.update(2,1)
    dll_1.display() 
    dll_1.update(7,25)
    print("tail", dll_1.tail.data)
    dll_1.display()       
    print(dll_1.pop())
    print("tail", dll_1.tail.data)
    dll_1.display()
    print("head", dll_1.head.data)
    print(dll_1.pop(0))
    print("head", dll_1.head.data)
    dll_1.display()
    print(dll_1.pop(0))
    print("head", dll_1.head.data)
    dll_1.display()  

    dll_2 = DoublyLList(23)  
    dll_2.display()
    print(dll_2.tail.data)
    print(dll_2.head.data)
    dll_2.append(6)
    dll_2.display()
    print(dll_2.head.data)    
    print(dll_2.tail.data)
    dll_2.prepend(3)
    dll_2.display()
    print(dll_2.head.data)    
    print(dll_2.tail.data)    

    dll_1.append(36)
    dll_1.append(8)
    dll_1.append(17)
    dll_1.append(15)
    dll_1.append(22)
    dll_1.display()
    print(dll_1.head.data, dll_1.tail.data)
    print(dll_1.pop(7))
    dll_1.display()
    print(dll_1.pop(2))
    dll_1.display()    
    print(dll_1.pop(1))
    dll_1.display()  
    print(dll_1.pop(0))
    dll_1.display()  
    print(dll_1.pop(5))
    dll_1.display()  
    print(dll_1.pop(3))
    dll_1.display()                      
    print(dll_1.pop(1))
    dll_1.display()  
    print(dll_1.pop(1))
    dll_1.display()  
    print(dll_1.pop(1))
    dll_1.display()  
    print(dll_1.pop(0))
    dll_1.display()    
    dll_1.insert(1,3)
    dll_1.insert(1,5)
    dll_1.insert(1,7)
    dll_1.insert(1,9)
    dll_1.insert(1,11)
    dll_1.insert(3,12)
    dll_1.insert(3,15)    
    dll_1.insert(3,4)    
    dll_1.display()
    dll_1.insert(6,15)    
    dll_1.display()
    dll_1.insert(2,25)    
    dll_1.display()    
    dll_1.insert(7,37)    
    dll_1.display()        
    dll_1.update(3,8)
    dll_1.update(7,2)    
    dll_1.display()
    print(dll_1.search(15))
    print(dll_1.search(155))    
    print(dll_1.search(11))    
    print(dll_1.search(7))    
    dll_1.display()
    print(dll_1.find(2))       
    print(dll_1.find(0))       
    print(dll_1.find(8))              
    print(dll_1.find(10))        

    dll_2.display()
    iterloop = iter(dll_2)          
    iterloop_1 = iter(dll_2)              
    print(next(iterloop))
    print(next(iterloop_1))    
    print(iterloop.__next__())
    # print(iterloop.__next__()) #Error will raise
    for i in dll_2:
        print(f"dll_1: {i}")
    dll_2.append(8)
    dll_2.append(5)
    dll_2.display()
    print(dll_2.remove(6))
    dll_2.display()
    print(dll_2.remove(5))
    dll_2.display()    
    print(dll_2.remove(23))
    dll_2.display()      
    print(dll_2.remove(8))
    dll_2.display()          
    print(dll_2.remove(8))
    print(dll_2.remove(3))    
    dll_2.display()              
    print(dll_2.remove(3))    
    dll_2.display()                  

    dll_3 = DoublyLList(2)
    dll_3.append(3)
    dll_3.append(5)
    dll_3.display()
    dll_3.clear()
    dll_3.display()


# append(value) -> None             #Add item at end
# prepend(value) -> None            #Add item at beginning
# insert(index, value) -> None      #Insert item at given index position  
# update(index, value) -> None      #Update the item at given index
# pop([, index]) -> item            #remove item at given position(default is last), optional index position
# remove(value) -> index            #remove value in the list and return index position
# search(value) -> index            #search the value and return index
# find(index) -> item               #search the index and return value
# display() -> None                 #display items for debug
# print(dll__object__) -> str       #return the items as str
# clear() -> None                   #clear the list 